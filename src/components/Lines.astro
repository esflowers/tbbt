<section class="w-full h-full flex items-center justify-center overflow-hidden">
    <canvas id="field" width="1000" height="800"></canvas>
</section>

<script>
    const canvas = document.getElementById('field') as HTMLCanvasElement
    const ctx = canvas.getContext('2d') as CanvasRenderingContext2D
    let mouseX = canvas.width / 2
    let mouseY = canvas.height / 2

    canvas.addEventListener('mousemove', (e: MouseEvent) => {
        const rect = canvas.getBoundingClientRect()
        mouseX = e.clientX - rect.left
        mouseY = e.clientY - rect.top
    })

    function drawField(): void {
        ctx.clearRect(0, 0, canvas.width, canvas.height)
        ctx.strokeStyle = '#fff'
        ctx.lineWidth = 1
        const spacingY = 17
        const spacingX = 17
        const maxForce = 7
        const influenceRadius = 1500

        for (let y = 0; y < canvas.height; y += spacingY) {
            for (let x = 0; x < canvas.width; x += spacingX) {
                const dx = x - mouseX
                const dy = y - mouseY
                const dist = Math.sqrt(dx * dx + dy * dy)
                const angle = Math.atan2(dy, dx)

                let force = (influenceRadius - dist) / influenceRadius
                force = Math.max(Math.min(force, 1), 0)
                const offsetX = Math.cos(angle) * force * maxForce
                const offsetY = Math.sin(angle) * force * maxForce
                ctx.beginPath()
                ctx.moveTo(x, y)
                ctx.lineTo(x + offsetX, y + offsetY)
                ctx.stroke()
            }
        }
        requestAnimationFrame(drawField)
    }

    drawField()
</script>